{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\calculator\\\\src\\\\components\\\\Display.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux'; // Styled Component holds everything but time above the number buttons\n\nconst DisplayStyled = styled.div`\n  height: 16.2rem;\n  background-color: rgba(0, 0, 0, 0.98);\n  position: relative;\n`; //Styled Component that holds input numbers and output\n\nconst NumbersPanel = styled.div`\n  padding: 0 20px 20px 20px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  position: absolute;\n  width: 100%;\n  height: 55%;\n  background-color: rgba(0, 0, 0, 0.98);\n  bottom: 0;\n  color: white;\n  font-size: 6.9rem;\n`;\n\nclass Display extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: ''\n    };\n  }\n\n  render() {\n    const HandleClick = sign => {\n      this.setState({\n        input: sign\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(DisplayStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NumbersPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, this.props.input === undefined ? 0 : this.props.input));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    input: state.input\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);","map":{"version":3,"sources":["C:/Users/user/calculator/src/components/Display.js"],"names":["React","Component","styled","connect","DisplayStyled","div","NumbersPanel","Display","state","input","render","HandleClick","sign","setState","props","undefined","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAI;;;;CAAjC,C,CAMA;;AACA,MAAMC,YAAY,GAAGJ,MAAM,CAACG,GAAI;;;;;;;;;;CAAhC;;AAWA,MAAME,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BO,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE;AADD,KADsB;AAAA;;AAK9BC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAIC,IAAD,IAAU;AAC5B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEG;AAAT,OAAd;AACD,KAFD;;AAGA,wBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKE,KAAL,CAAWL,KAAX,KAAqBM,SAArB,GAAiC,CAAjC,GAAqC,KAAKD,KAAL,CAAWL,KADnD,CADF,CADF;AAOD;;AAhB6B;;AAmBhC,MAAMO,eAAe,GAAIR,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADR,GAAP;AAGD,CAJD;;AAMA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO,EAAP;AACD,CAFD;;AAIA,eAAef,OAAO,CAACa,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\n\r\n// Styled Component holds everything but time above the number buttons\r\nconst DisplayStyled = styled.div`\r\n  height: 16.2rem;\r\n  background-color: rgba(0, 0, 0, 0.98);\r\n  position: relative;\r\n`;\r\n\r\n//Styled Component that holds input numbers and output\r\nconst NumbersPanel = styled.div`\r\n  padding: 0 20px 20px 20px;\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 55%;\r\n  background-color: rgba(0, 0, 0, 0.98);\r\n  bottom: 0;\r\n  color: white;\r\n  font-size: 6.9rem;\r\n`;\r\nclass Display extends Component {\r\n  state = {\r\n    input: '',\r\n  };\r\n\r\n  render() {\r\n    const HandleClick = (sign) => {\r\n      this.setState({ input: sign });\r\n    };\r\n    return (\r\n      <DisplayStyled>\r\n        <NumbersPanel>\r\n          {this.props.input === undefined ? 0 : this.props.input}\r\n        </NumbersPanel>\r\n      </DisplayStyled>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    input: state.input,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);\r\n"]},"metadata":{},"sourceType":"module"}