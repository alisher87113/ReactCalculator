{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\calculator\\\\src\\\\components\\\\Display.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport MyContext from '../context/MyContext'; // Styled Component holds everything but time above the number buttons\n\nconst DisplayStyled = styled.div`\n  background-color: rgba(0, 0, 0, 0.98);\n  height: 16.9rem;\n  position: relative;\n`; //Styled Component that holds input numbers and output\n\nconst NumbersPanelStyled = styled.div`\n  background-color: rgba(0, 0, 0, 0.98);\n  height: 10.9rem;\n  text-align: right;\n`;\nconst StyledDiv = styled.div`\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  color: white;\n  font-size: (${props => props.calcFontSize});\n  line-height: 7.9rem;\n  width: 100%;\n  font-size: 10.9rem;\n  /* padding: 0 20px 20px 20px; */\n  padding: 0 1.9rem 1.9rem 1.9rem;\n\n  position: absolute;\n  bottom: 0;\n  float: right;\n  text-align: right;\n`;\n\nclass Display extends Component {\n  render() {\n    // const inputLength = this.props.input.length;\n    // const calcFontSize =\n    //   (inputLength <= 5 ? 10.9 : 10.9 / (inputLength / 5)) + 'rem';\n    // console.log(calcFontSize);\n    // const calcLineHeight =\n    //   (inputLength <= 5 ? 7.9 : 7.9 / (inputLength / 5)) + 'rem';\n    return (\n      /*#__PURE__*/\n      // <MyContext.Consumer>\n      //   {(state) => <div>{state.pop}</div>}\n      // </MyContext.Consumer>\n      React.createElement(MyContext.Consumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, context => /*#__PURE__*/React.createElement(DisplayStyled, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(NumbersPanelStyled, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(StyledDiv // style={{ fontSize: calcFontSize, lineHeight: calcLineHeight }}\n      , {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }, context.state.pop), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => context.handleClick(8),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, \"Hou\"))))\n    );\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["C:/Users/user/calculator/src/components/Display.js"],"names":["React","Component","styled","MyContext","DisplayStyled","div","NumbersPanelStyled","StyledDiv","props","calcFontSize","Display","render","context","state","pop","handleClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,sBAAtB,C,CAEA;;AACA,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAI;;;;CAAjC,C,CAMA;;AACA,MAAMC,kBAAkB,GAAGJ,MAAM,CAACG,GAAI;;;;CAAtC;AAKA,MAAME,SAAS,GAAGL,MAAM,CAACG,GAAI;;;gBAGZG,KAAD,IAAWA,KAAK,CAACC,YAAa;;;;;;;;;;;CAH9C;;AAeA,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAC9BU,EAAAA,MAAM,GAAG;AACP;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACE;AACA;AACA;AACA,0BAAC,SAAD,CAAW,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIC,OAAD,iBACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD,CACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGA,OAAO,CAACC,KAAR,CAAcC,GAHjB,CADF,eAME;AAAQ,QAAA,OAAO,EAAE,MAAMF,OAAO,CAACG,WAAR,CAAoB,CAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CADF,CAFJ;AAJF;AAmBD;;AA5B6B;;AA+BhC,eAAeL,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport MyContext from '../context/MyContext';\r\n\r\n// Styled Component holds everything but time above the number buttons\r\nconst DisplayStyled = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.98);\r\n  height: 16.9rem;\r\n  position: relative;\r\n`;\r\n\r\n//Styled Component that holds input numbers and output\r\nconst NumbersPanelStyled = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.98);\r\n  height: 10.9rem;\r\n  text-align: right;\r\n`;\r\nconst StyledDiv = styled.div`\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  color: white;\r\n  font-size: (${(props) => props.calcFontSize});\r\n  line-height: 7.9rem;\r\n  width: 100%;\r\n  font-size: 10.9rem;\r\n  /* padding: 0 20px 20px 20px; */\r\n  padding: 0 1.9rem 1.9rem 1.9rem;\r\n\r\n  position: absolute;\r\n  bottom: 0;\r\n  float: right;\r\n  text-align: right;\r\n`;\r\nclass Display extends Component {\r\n  render() {\r\n    // const inputLength = this.props.input.length;\r\n\r\n    // const calcFontSize =\r\n    //   (inputLength <= 5 ? 10.9 : 10.9 / (inputLength / 5)) + 'rem';\r\n    // console.log(calcFontSize);\r\n    // const calcLineHeight =\r\n    //   (inputLength <= 5 ? 7.9 : 7.9 / (inputLength / 5)) + 'rem';\r\n    return (\r\n      // <MyContext.Consumer>\r\n      //   {(state) => <div>{state.pop}</div>}\r\n      // </MyContext.Consumer>\r\n      <MyContext.Consumer>\r\n        {(context) => (\r\n          <DisplayStyled>\r\n            <NumbersPanelStyled>\r\n              <StyledDiv\r\n              // style={{ fontSize: calcFontSize, lineHeight: calcLineHeight }}\r\n              >\r\n                {context.state.pop}\r\n              </StyledDiv>\r\n              <button onClick={() => context.handleClick(8)}>Hou</button>\r\n            </NumbersPanelStyled>\r\n          </DisplayStyled>\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n"]},"metadata":{},"sourceType":"module"}