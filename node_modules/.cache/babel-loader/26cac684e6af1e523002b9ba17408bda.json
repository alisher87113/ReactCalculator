{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\calculator\\\\src\\\\context\\\\MyProvider.js\";\nimport Context from './MyContext';\nimport React, { Component } from 'react';\nimport MyContext from './MyContext';\n\nclass Provider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentInput: '0',\n      prevInput: null,\n      method: null\n    };\n\n    this.handleClick = symbol => {\n      const {\n        currentInput\n      } = this.state;\n      const isNumber = Number(symbol) * 2;\n      console.log(isNumber);\n\n      if (isNumber == NaN) {\n        console.log('poo');\n      }\n\n      if (currentInput == 0) {\n        this.setState({\n          currentInput: symbol\n        });\n      } else if (currentInput !== 0) {\n        this.setState({\n          currentInput: currentInput + symbol\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MyContext.Provider, {\n      value: {\n        state: this.state,\n        handleClick: sym => this.handleClick(sym)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default Provider;","map":{"version":3,"sources":["C:/Users/user/calculator/src/context/MyProvider.js"],"names":["Context","React","Component","MyContext","Provider","state","currentInput","prevInput","method","handleClick","symbol","isNumber","Number","console","log","NaN","setState","render","sym","props","children"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,aAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACNC,MAAAA,YAAY,EAAE,GADR;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADuB;;AAAA,SAO/BC,WAP+B,GAOhBC,MAAD,IAAY;AACxB,YAAM;AAAEJ,QAAAA;AAAF,UAAmB,KAAKD,KAA9B;AACA,YAAMM,QAAQ,GAAGC,MAAM,CAACF,MAAD,CAAN,GAAiB,CAAlC;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,UAAIA,QAAQ,IAAII,GAAhB,EAAqB;AACnBF,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD;;AACD,UAAIR,YAAY,IAAI,CAApB,EAAuB;AACrB,aAAKU,QAAL,CAAc;AAAEV,UAAAA,YAAY,EAAEI;AAAhB,SAAd;AACD,OAFD,MAEO,IAAIJ,YAAY,KAAK,CAArB,EAAwB;AAC7B,aAAKU,QAAL,CAAc;AAAEV,UAAAA,YAAY,EAAEA,YAAY,GAAGI;AAA/B,SAAd;AACD;AACF,KAnB8B;AAAA;;AAqB/BO,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,SAAD,CAAW,QAAX;AACE,MAAA,KAAK,EAAE;AACLZ,QAAAA,KAAK,EAAE,KAAKA,KADP;AAELI,QAAAA,WAAW,EAAGS,GAAD,IAAS,KAAKT,WAAL,CAAiBS,GAAjB;AAFjB,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKC,KAAL,CAAWC,QANd,CADF;AAUD;;AAhC8B;;AAkCjC,eAAehB,QAAf","sourcesContent":["import Context from './MyContext';\r\nimport React, { Component } from 'react';\r\nimport MyContext from './MyContext';\r\n\r\nclass Provider extends Component {\r\n  state = {\r\n    currentInput: '0',\r\n    prevInput: null,\r\n    method: null,\r\n  };\r\n\r\n  handleClick = (symbol) => {\r\n    const { currentInput } = this.state;\r\n    const isNumber = Number(symbol) * 2;\r\n    console.log(isNumber);\r\n    if (isNumber == NaN) {\r\n      console.log('poo');\r\n    }\r\n    if (currentInput == 0) {\r\n      this.setState({ currentInput: symbol });\r\n    } else if (currentInput !== 0) {\r\n      this.setState({ currentInput: currentInput + symbol });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MyContext.Provider\r\n        value={{\r\n          state: this.state,\r\n          handleClick: (sym) => this.handleClick(sym),\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </MyContext.Provider>\r\n    );\r\n  }\r\n}\r\nexport default Provider;\r\n"]},"metadata":{},"sourceType":"module"}