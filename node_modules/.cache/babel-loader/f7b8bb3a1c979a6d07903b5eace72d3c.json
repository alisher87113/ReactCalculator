{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\calculator\\\\src\\\\context\\\\MyProvider.js\";\nimport React, { Component } from 'react';\nimport MyContext from './MyContext';\n\nclass Provider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentInput: 0,\n      prevInput: null,\n      method: null,\n      showingResult: false\n    };\n\n    this.setStateMethod = method => {\n      this.setState({\n        prevInput: this.state.currentInput\n      });\n      this.setState({\n        method: method\n      });\n      this.setState({\n        currentInput: 0\n      });\n    };\n\n    this.evaluate = () => {\n      console.log(this.state.prevInput, this.state.currentInput);\n      console.log(Number(this.state.currentInput) + Number(this.state.method) + Number(this.state.prevInput));\n    };\n\n    this.handleClick = symbol => {\n      if (this.state.showingResult) {\n        this.setState({\n          currentInput: 0\n        });\n        this.setState({\n          showingResult: false\n        });\n      }\n\n      const {\n        currentInput\n      } = this.state;\n      const intSymbol = Number(symbol);\n      console.log(intSymbol);\n      console.log(currentInput.length); //handling Numbers and dot\n\n      if (!isNaN(intSymbol) || symbol === '.') {\n        if (currentInput === 0 || currentInput.length <= 8) {\n          if (symbol === '.') {\n            if (currentInput === 0 || currentInput.indexOf('.') === -1) {\n              this.setState({\n                currentInput: currentInput + symbol\n              });\n            }\n          } else if (currentInput === 0) {\n            this.setState({\n              currentInput: symbol\n            });\n          } else if (currentInput !== 0) {\n            this.setState({\n              currentInput: currentInput + symbol\n            });\n          }\n        }\n      } //handling methods\n      else if (isNaN(intSymbol)) {\n          if (symbol === 'C') {\n            this.setState({\n              currentInput: 0\n            });\n            this.setState({\n              prevInput: null\n            });\n            this.setState({\n              method: null\n            });\n          } else if (symbol === '+') {\n            this.setStateMethod(symbol);\n          } else if (symbol === '-') {\n            this.setStateMethod(symbol);\n          } else if (symbol === '✕') {\n            this.setStateMethod(symbol);\n          } else if (symbol === '÷') {\n            this.setStateMethod(symbol);\n          } else if (symbol === '=') {\n            this.evaluate();\n          }\n        }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MyContext.Provider, {\n      value: {\n        state: this.state,\n        handleClick: sym => this.handleClick(sym)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default Provider;","map":{"version":3,"sources":["C:/Users/user/calculator/src/context/MyProvider.js"],"names":["React","Component","MyContext","Provider","state","currentInput","prevInput","method","showingResult","setStateMethod","setState","evaluate","console","log","Number","handleClick","symbol","intSymbol","length","isNaN","indexOf","render","sym","props","children"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MyContext from './MyContext';\r\n\r\nclass Provider extends Component {\r\n  state = {\r\n    currentInput: 0,\r\n    prevInput: null,\r\n    method: null,\r\n    showingResult: false,\r\n  };\r\n\r\n  //method to copy current input into prevInput clean up current input\r\n  setStateMethod = (method) => {\r\n    this.setState({ prevInput: this.state.currentInput });\r\n    this.setState({ method: method });\r\n    this.setState({ currentInput: 0 });\r\n  };\r\n  evaluate = () => {\r\n    console.log(this.state.prevInput, this.state.currentInput);\r\n    console.log(\r\n      Number(this.state.currentInput) +\r\n        Number(this.state.method) +\r\n        Number(this.state.prevInput)\r\n    );\r\n  };\r\n  handleClick = (symbol) => {\r\n    if (this.state.showingResult) {\r\n      this.setState({ currentInput: 0 });\r\n      this.setState({ showingResult: false });\r\n    }\r\n    const { currentInput } = this.state;\r\n    const intSymbol = Number(symbol);\r\n    console.log(intSymbol);\r\n    console.log(currentInput.length);\r\n    //handling Numbers and dot\r\n    if (!isNaN(intSymbol) || symbol === '.') {\r\n      if (currentInput === 0 || currentInput.length <= 8) {\r\n        if (symbol === '.') {\r\n          if (currentInput === 0 || currentInput.indexOf('.') === -1) {\r\n            this.setState({ currentInput: currentInput + symbol });\r\n          }\r\n        } else if (currentInput === 0) {\r\n          this.setState({ currentInput: symbol });\r\n        } else if (currentInput !== 0) {\r\n          this.setState({ currentInput: currentInput + symbol });\r\n        }\r\n      }\r\n    }\r\n    //handling methods\r\n    else if (isNaN(intSymbol)) {\r\n      if (symbol === 'C') {\r\n        this.setState({ currentInput: 0 });\r\n        this.setState({ prevInput: null });\r\n        this.setState({ method: null });\r\n      } else if (symbol === '+') {\r\n        this.setStateMethod(symbol);\r\n      } else if (symbol === '-') {\r\n        this.setStateMethod(symbol);\r\n      } else if (symbol === '✕') {\r\n        this.setStateMethod(symbol);\r\n      } else if (symbol === '÷') {\r\n        this.setStateMethod(symbol);\r\n      } else if (symbol === '=') {\r\n        this.evaluate();\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <MyContext.Provider\r\n        value={{\r\n          state: this.state,\r\n          handleClick: (sym) => this.handleClick(sym),\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </MyContext.Provider>\r\n    );\r\n  }\r\n}\r\nexport default Provider;\r\n"]},"metadata":{},"sourceType":"module"}