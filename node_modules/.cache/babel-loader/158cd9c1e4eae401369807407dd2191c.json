{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\calculator\\\\src\\\\components\\\\Display.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport MyContext from '../context/MyContext';\nimport WithContext from './HOC/WithContext'; // Styled Component holds everything but time above the number buttons\n\nconst DisplayStyled = styled.div`\n  background-color: rgba(0, 0, 0, 0.98);\n  height: 16.9rem;\n  position: relative;\n`; //Styled Component that holds input numbers and output\n\nconst NumbersPanelStyled = styled.div`\n  background-color: rgba(0, 0, 0, 0.98);\n  height: 10.9rem;\n  text-align: right;\n`;\nconst StyledDiv = styled.div`\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  color: white;\n  font-size: (${props => props.calcFontSize});\n  line-height: 7.9rem;\n  width: 100%;\n  font-size: 10.9rem;\n  /* padding: 0 20px 20px 20px; */\n  padding: 0 1.9rem 1.9rem 1.9rem;\n\n  position: absolute;\n  bottom: 0;\n  float: right;\n  text-align: right;\n`;\n\nclass Display extends Component {\n  render() {\n    const {\n      currentInput\n    } = this.props.context.state;\n    const currentInputLength = currentInput.length;\n    console.log(currentInput.length);\n    const calcFontSize = (currentInputLength <= 5 ? 10.9 : 10.9 / (currentInputLength / 5)) + 'rem';\n    const calcLineHeight = (currentInputLength <= 5 ? 7.9 : 7.9 / (currentInputLength / 5)) + 'rem';\n    return /*#__PURE__*/React.createElement(MyContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, context => /*#__PURE__*/React.createElement(DisplayStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NumbersPanelStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StyledDiv, {\n      style: {\n        fontSize: calcFontSize,\n        lineHeight: calcLineHeight\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, context.state.currentInput))));\n  }\n\n}\n\nexport default WithContext(Display);","map":{"version":3,"sources":["C:/Users/user/calculator/src/components/Display.js"],"names":["React","Component","styled","MyContext","WithContext","DisplayStyled","div","NumbersPanelStyled","StyledDiv","props","calcFontSize","Display","render","currentInput","context","state","currentInputLength","length","console","log","calcLineHeight","fontSize","lineHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,WAAP,MAAwB,mBAAxB,C,CAEA;;AACA,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAI;;;;CAAjC,C,CAMA;;AACA,MAAMC,kBAAkB,GAAGL,MAAM,CAACI,GAAI;;;;CAAtC;AAKA,MAAME,SAAS,GAAGN,MAAM,CAACI,GAAI;;;gBAGZG,KAAD,IAAWA,KAAK,CAACC,YAAa;;;;;;;;;;;CAH9C;;AAeA,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAC9BW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKJ,KAAL,CAAWK,OAAX,CAAmBC,KAA5C;AACA,UAAMC,kBAAkB,GAAGH,YAAY,CAACI,MAAxC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAY,CAACI,MAAzB;AACA,UAAMP,YAAY,GAChB,CAACM,kBAAkB,IAAI,CAAtB,GAA0B,IAA1B,GAAiC,QAAQA,kBAAkB,GAAG,CAA7B,CAAlC,IACA,KAFF;AAGA,UAAMI,cAAc,GAClB,CAACJ,kBAAkB,IAAI,CAAtB,GAA0B,GAA1B,GAAgC,OAAOA,kBAAkB,GAAG,CAA5B,CAAjC,IAAmE,KADrE;AAEA,wBACE,oBAAC,SAAD,CAAW,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIF,OAAD,iBACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE;AAAEO,QAAAA,QAAQ,EAAEX,YAAZ;AAA0BY,QAAAA,UAAU,EAAEF;AAAtC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGN,OAAO,CAACC,KAAR,CAAcF,YAHjB,CADF,CADF,CAFJ,CADF;AAeD;;AAzB6B;;AA4BhC,eAAeT,WAAW,CAACO,OAAD,CAA1B","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport MyContext from '../context/MyContext';\r\nimport WithContext from './HOC/WithContext';\r\n\r\n// Styled Component holds everything but time above the number buttons\r\nconst DisplayStyled = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.98);\r\n  height: 16.9rem;\r\n  position: relative;\r\n`;\r\n\r\n//Styled Component that holds input numbers and output\r\nconst NumbersPanelStyled = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.98);\r\n  height: 10.9rem;\r\n  text-align: right;\r\n`;\r\nconst StyledDiv = styled.div`\r\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  color: white;\r\n  font-size: (${(props) => props.calcFontSize});\r\n  line-height: 7.9rem;\r\n  width: 100%;\r\n  font-size: 10.9rem;\r\n  /* padding: 0 20px 20px 20px; */\r\n  padding: 0 1.9rem 1.9rem 1.9rem;\r\n\r\n  position: absolute;\r\n  bottom: 0;\r\n  float: right;\r\n  text-align: right;\r\n`;\r\nclass Display extends Component {\r\n  render() {\r\n    const { currentInput } = this.props.context.state;\r\n    const currentInputLength = currentInput.length;\r\n    console.log(currentInput.length);\r\n    const calcFontSize =\r\n      (currentInputLength <= 5 ? 10.9 : 10.9 / (currentInputLength / 5)) +\r\n      'rem';\r\n    const calcLineHeight =\r\n      (currentInputLength <= 5 ? 7.9 : 7.9 / (currentInputLength / 5)) + 'rem';\r\n    return (\r\n      <MyContext.Consumer>\r\n        {(context) => (\r\n          <DisplayStyled>\r\n            <NumbersPanelStyled>\r\n              <StyledDiv\r\n                style={{ fontSize: calcFontSize, lineHeight: calcLineHeight }}\r\n              >\r\n                {context.state.currentInput}\r\n              </StyledDiv>\r\n            </NumbersPanelStyled>\r\n          </DisplayStyled>\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WithContext(Display);\r\n"]},"metadata":{},"sourceType":"module"}